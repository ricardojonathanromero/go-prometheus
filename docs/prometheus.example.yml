# some generic configurations

# Generic placeholders are defined as follows:
#   <boolean>: a boolean that can take the values true or false
#   <duration>: a duration matching the regular expression ((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0), e.g. 1d, 1h30m, 5m, 10s
#   <filename>: a valid path in the current working directory
#   <float>: a floating-point number
#   <host>: a valid string consisting of a hostname or IP followed by an optional port number
#   <int>: an integer value
#   <labelname>: a string matching the regular expression [a-zA-Z_][a-zA-Z0-9_]*. Any other unsupported character in the source label should be converted to an underscore. For example, the label app.kubernetes.io/name should be written as app_kubernetes_io_name.
#   <labelvalue>: a string of unicode characters
#   <path>: a valid URL path
#   <scheme>: a string that can take the values http or https
#   <secret>: a regular string that is a secret, such as a password
#   <string>: a regular string
#   <size>: a size in bytes, e.g. 512MB. A unit is required. Supported units: B, KB, MB, GB, TB, PB, EB.
#   <tmpl_string>: a string which is template-expanded before usage

global:
  # How frequently to scrape targets by default.
  [ scrape_interval: <duration> | default = 1m ]

  # How long until a scrape request times out.
  [ scrape_timeout: <duration> | default = 10s ]

  # The protocols to negotiate during a scrape with the client.
  # Supported values (case sensitive): PrometheusProto, OpenMetricsText0.0.1,
  # OpenMetricsText1.0.0, PrometheusText0.0.4.
  # The default value changes to [ PrometheusProto, OpenMetricsText1.0.0, OpenMetricsText0.0.1, PrometheusText0.0.4 ]
  # when native_histogram feature flag is set.

  [ scrape_protocols: [<string>, ...] # | default = [ OpenMetricsText1.0.0, OpenMetricsText0.0.1, PrometheusText0.0.4 ] ]

  # How frequently to evaluate rules.
  [ evaluation_interval: <duration> | default = 1m ]

  # The labels to add to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    [ <labelname>: <labelvalue> ... ]

  # File to which PromQL queries are logged.
  # Reloading the configuration will reopen the file.
  [ query_log_file: <string> ]

  # An uncompressed response body larger than this many bytes will cause the
  # scrape to fail. 0 means no limit. Example: 100MB.
  # This is an experimental feature, this behaviour could
  # change or be removed in the future.
  [ body_size_limit: <size> | default = 0 ]

  # Per-scrape limit on number of scraped samples that will be accepted.
  # If more than this number of samples are present after metric relabeling
  # the entire scrape will be treated as failed. 0 means no limit.
  [ sample_limit: <int> | default = 0 ]

  # Per-scrape limit on number of labels that will be accepted for a sample. If
  # more than this number of labels are present post metric-relabeling, the
  # entire scrape will be treated as failed. 0 means no limit.
  [ label_limit: <int> | default = 0 ]

  # Per-scrape limit on length of labels name that will be accepted for a sample.
  # If a label name is longer than this number post metric-relabeling, the entire
  # scrape will be treated as failed. 0 means no limit.
  [ label_name_length_limit: <int> | default = 0 ]

  # Per-scrape limit on length of labels value that will be accepted for a sample.
  # If a label value is longer than this number post metric-relabeling, the
  # entire scrape will be treated as failed. 0 means no limit.
  [ label_value_length_limit: <int> | default = 0 ]

  # Per-scrape config limit on number of unique targets that will be
  # accepted. If more than this number of targets are present after target
  # relabeling, Prometheus will mark the targets as failed without scraping them.
  # 0 means no limit. This is an experimental feature, this behaviour could
  # change in the future.
  [ target_limit: <int> | default = 0 ]

  # Limit per scrape config on the number of targets dropped by relabeling
  # that will be kept in memory. 0 means no limit.
  [ keep_dropped_targets: <int> | default = 0 ]



# Rule files specifies a list of globs. Rules and alerts are read from
# all matching files.
rule_files:
  [ - <filepath_glob> ... ]
  # example
  # - 'prometheus-rules.yml'

# Scrape config files specifies a list of globs. Scrape configs are read from
# all matching files and appended to the list of scrape configs.
scrape_config_files:
  [ - <filepath_glob> ... ]
  # example
  # - 'prometheus.scrape.yml'

# A list of scrape configurations.
scrape_configs:
  [ - <scrape_config> ... ] # Ref: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config

# Alerting specifies settings related to the Alertmanager.
alerting:
  alert_relabel_configs:
    [ - <relabel_config> ... ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  alertmanagers:
    [ - <alertmanager_config> ... ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config

# Settings related to the remote write feature.
remote_write:
  [ - <remote_write> ... ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write

# Settings related to the remote read feature.
remote_read:
  [ - <remote_read> ... ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_read

# Storage related settings that are runtime reloadable.
storage:
  [ tsdb: <tsdb> ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#tsdb
  [ exemplars: <exemplars> ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#exemplars

# Configures exporting traces.
tracing:
  [ <tracing_config> ] # Ref https://prometheus.io/docs/prometheus/latest/configuration/configuration/#tracing_config