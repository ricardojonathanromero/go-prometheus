# Recording rules
# Recording rules allow you to precompute frequently needed or computationally
# expensive expressions and save their result as a new set of time series. Querying
# the precomputed result will then often be much faster than executing the original
# expression every time it is needed. This is especially useful for dashboards,
# which need to query the same expression repeatedly every time they refresh.
#
# Recording and alerting rules exist in a rule group. Rules within a group are run
# sequentially at a regular interval, with the same evaluation time. The names of
# recording rules must be valid metric names. The names of alerting rules must be
# valid label values.

groups:
  [ - <rule_group> ] # See example below or Ref to <rule_group> reference

# ------------------------- Example group config -------------------------
# groups:
#   - name: example
#     rules:
#       - record: code:prometheus_http_requests_total:sum
#         expr: sum by (code) (prometheus_http_requests_total)


# ------------------------- <rule_group> reference -------------------------
# <rule_group> reference
# The name of the group. Must be unique within a file.
#  - name: <string>
#
# How often rules in the group are evaluated.
#   [ interval: <duration> | default = global.evaluation_interval ]
#
# Limit the number of alerts an alerting rule and series a recording
# rule can produce. 0 is no limit.
#   [ limit: <int> | default = 0 ]
#
#   rules:
#     [ - <rule> ... ] # See <rule> reference


# ------------------------- <rule> reference -------------------------
# The name of the time series to output to. Must be a valid metric name.
#     - record: <string>
#
# The PromQL expression to evaluate. Every evaluation cycle this is
# evaluated at the current time, and the result recorded as a new set of
# time series with the metric name as given by 'record'.
#       expr: <string>
#
# Labels to add or overwrite before storing the result.
#       labels:
#       [ <labelname>: <labelvalue> ]
